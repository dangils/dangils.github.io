I"Q<h3 id="python-list-comprehension">Python List Comprehension</h3>

<blockquote>
  <p>리스트를 초기화 하는 방법중 하나로 대괄호 안에([]) 조건문과 반복문을 넣는 방식으로 리스트를 초기화</p>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">array</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">21</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">]</span>

<span class="n">array</span><span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">9</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>

<span class="err">﻿</span><span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">36</span><span class="p">,</span> <span class="mi">64</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ul>
  <li>N*M 크기의 2차원 리스트 초기화</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="n">n</span><span class="o">=</span><span class="mi">3</span>
<span class="n">m</span><span class="o">=</span><span class="mi">4</span>
<span class="n">array</span><span class="o">=</span><span class="p">[[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">m</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)]</span> <span class="c1">#﻿ 단순 반복시 i를 _로 대체 가능'
</span><span class="k">print</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<ul>
  <li>2차원 리스트를 초기화 할때는 반드시 리스트 컴프리헨션을 이용. 다음과 같이 초기화 할 시 의도하지 않은 결과가 나올 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="n">array</span> <span class="o">=</span><span class="p">[[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">m</span><span class="p">]</span><span class="o">*</span><span class="n">n</span>
<span class="k">print</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>

<span class="n">array</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">5</span>
<span class="k">print</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>

<span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]]</span>
<span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]]</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<ul>
  <li>이는 내부적으로 포함된 3개의 리스트가 모두 동일한 객체에 대한 3개의 래퍼런스로 인식되기 때문</li>
</ul>

<p><br /></p>

<hr />

<ul>
  <li>python 정렬 기본 문법</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre><span class="n">a</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="s">'기본리스트 : '</span><span class="p">,</span><span class="n">a</span><span class="p">)</span>

<span class="c1">#리스트에 원소 삽입
</span><span class="n">a</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"삽입 : "</span><span class="p">,</span><span class="n">a</span><span class="p">)</span>

<span class="c1">#오름차순 정렬
</span><span class="n">a</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="s">"오름차순 정렬: "</span><span class="p">,</span><span class="n">a</span><span class="p">)</span>

<span class="c1">#내림차순 정렬
</span><span class="n">a</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"내림차순 정렬 : "</span><span class="p">,</span><span class="n">a</span><span class="p">)</span>

<span class="c1">#리스트 원소 뒤집기
</span><span class="n">a</span><span class="p">.</span><span class="n">reverse</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="s">"원소 뒤집기 : "</span><span class="p">,</span><span class="n">a</span><span class="p">)</span>

<span class="c1"># 특정 인덱스에 데이터 추가 (해당 자리에 넣고 다른것 뒤로 밀어냄)
</span><span class="n">a</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"인덱스 2에 3추가 "</span><span class="p">,</span><span class="n">a</span><span class="p">)</span>

<span class="c1">#특정 값인 데이터 개수 세기
</span>
<span class="k">print</span><span class="p">(</span><span class="s">"값이 3인 데이터 개수 : "</span><span class="p">,</span> <span class="n">a</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>

<span class="n">a</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"값이 1인 데이터 삭제 : "</span><span class="p">,</span><span class="n">a</span><span class="p">)</span>

<span class="n">기본리스트</span> <span class="p">:</span>  <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">삽입</span> <span class="p">:</span>  <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>
<span class="n">오름차순</span> <span class="n">정렬</span><span class="p">:</span>  <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
<span class="n">내림차순</span> <span class="n">정렬</span> <span class="p">:</span>  <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<span class="n">원소</span> <span class="n">뒤집기</span> <span class="p">:</span>  <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
<span class="n">인덱스</span> <span class="mi">2</span><span class="n">에</span> <span class="mi">3</span><span class="n">추가</span>  <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
<span class="n">값이</span> <span class="mi">3</span><span class="n">인</span> <span class="n">데이터</span> <span class="n">개수</span> <span class="p">:</span>  <span class="mi">2</span>
<span class="n">값이</span> <span class="mi">1</span><span class="n">인</span> <span class="n">데이터</span> <span class="n">삭제</span> <span class="p">:</span>  <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>

<span class="c1">#insert 함수는 원소 삽입후 위치를 조정하므로 append 함수보다 동작이 느리다.
</span></pre></td></tr></tbody></table></code></pre></div></div>

<ul>
  <li>특정한 원소값 제거</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="n">a</span><span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>
<span class="n">remove_set</span> <span class="o">=</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">}</span>

<span class="c1">#remove_set에 포함되지 않은 값만을 저장
</span><span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">a</span> <span class="k">if</span> <span class="n">i</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">remove_set</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="tuple">Tuple</h3>
<ul>
  <li>튜플은 한 번 선언된 값을 변경할 수 없다.</li>
  <li>리스트는 대괄호[], 튜플은 소괄호()</li>
  <li>튜플 자료형은 그래프 알고리즘을 구현시 자주 사용</li>
  <li>ex) 다익스트라 최단 경로 알고리즘, 알고리즘 → 우선순위 큐에 한 번 들어간 값은 변경되지 않는다.</li>
</ul>

<h3 id="dictionary">Dictionary</h3>
<ul>
  <li>키(key)와 값(Value)의 쌍을 데이터로 가지는 자료형</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="n">data</span><span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
<span class="n">data</span><span class="p">[</span><span class="s">'사과'</span><span class="p">]</span><span class="o">=</span> <span class="s">"Apple"</span>
<span class="n">data</span><span class="p">[</span><span class="s">'바나나'</span><span class="p">]</span><span class="o">=</span><span class="s">'Banana'</span>
<span class="n">data</span><span class="p">[</span><span class="s">'코코넛'</span><span class="p">]</span><span class="o">=</span> <span class="s">'coconut'</span>

<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="k">if</span> <span class="s">'사과'</span> <span class="ow">in</span> <span class="n">data</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"'사과'를 키로 가지는 데이터가 존재합니다."</span><span class="p">)</span>

<span class="p">{</span><span class="s">'사과'</span><span class="p">:</span> <span class="s">'Apple'</span><span class="p">,</span> <span class="s">'바나나'</span><span class="p">:</span> <span class="s">'Banana'</span><span class="p">,</span> <span class="s">'코코넛'</span><span class="p">:</span> <span class="s">'coconut'</span><span class="p">}</span>
<span class="s">'사과'</span><span class="n">를</span> <span class="n">키로</span> <span class="n">가지는</span> <span class="n">데이터가</span> <span class="n">존재합니다</span><span class="p">.</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="set">Set</h3>
<ul>
  <li>집합(set)을 처리하기 위한 자료형</li>
  <li>중복을 혀용하지 않음</li>
  <li>순서가 없다. → 사전 자료형과 집합 자료형은 순서가 없으므로 인덱싱으로 값을 얻을 수 없다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="rouge-code"><pre><span class="c1">#집합 자료형 초기화 방법 - 1
</span>
<span class="n">data</span> <span class="o">=</span> <span class="nb">set</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="c1">#집합 자료형 초기화 방법 - 2
</span><span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">}</span>
<span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">}</span>

<span class="c1"># 집합 자료형 연산, 관련 함수
</span>
<span class="c1">#합집합 : | , 교집합 : &amp; , 차집합 : -
</span>
<span class="c1"># 집합 자료형 관련 함수 : remove(),updata()
</span>
<span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="c1">#새로운 원소 추가
</span><span class="n">data</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="c1">#새로운 원소 여러 개 추가
</span><span class="n">data</span><span class="p">.</span><span class="n">update</span><span class="p">([</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="c1">#특정한 값을 갖는 원소 삭제
</span><span class="n">data</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">}</span>
<span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">}</span>
<span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET